// <auto-generated />
using System;
using DatabaseMiddlware;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DatabaseMiddlware.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20181211201153_InitStableState2")]
    partial class InitStableState2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DatabaseMiddlware.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Cooperator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDay");

                    b.Property<int>("Building");

                    b.Property<Guid?>("CategoryId");

                    b.Property<string>("FirstName");

                    b.Property<int>("Flat");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<Guid?>("PositionId");

                    b.Property<double>("Salary");

                    b.Property<Guid?>("StreetId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PositionId");

                    b.HasIndex("StreetId");

                    b.ToTable("Cooperators");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Dish", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CooperatorId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CooperatorId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CooperatorId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CooperatorId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.MenuItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("DishId");

                    b.Property<Guid?>("MenuId");

                    b.Property<double>("Outer");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<Guid?>("DishId");

                    b.Property<Guid?>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("ProductId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Street", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Streets");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CooperatorId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("LastEnter");

                    b.Property<DateTime>("LastUpdated");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int>("Role");

                    b.HasKey("Id");

                    b.HasIndex("CooperatorId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.WorkBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CooperatorId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("OrderNumber");

                    b.Property<Guid?>("PositionId");

                    b.Property<string>("Reason");

                    b.HasKey("Id");

                    b.HasIndex("CooperatorId");

                    b.HasIndex("PositionId");

                    b.ToTable("WorkBooks");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Cooperator", b =>
                {
                    b.HasOne("DatabaseMiddlware.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("DatabaseMiddlware.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("DatabaseMiddlware.Models.Street", "Street")
                        .WithMany()
                        .HasForeignKey("StreetId");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Dish", b =>
                {
                    b.HasOne("DatabaseMiddlware.Models.Cooperator", "Cooperator")
                        .WithMany()
                        .HasForeignKey("CooperatorId");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Menu", b =>
                {
                    b.HasOne("DatabaseMiddlware.Models.Cooperator", "Cooperator")
                        .WithMany()
                        .HasForeignKey("CooperatorId");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.MenuItems", b =>
                {
                    b.HasOne("DatabaseMiddlware.Models.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId");

                    b.HasOne("DatabaseMiddlware.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.Recipe", b =>
                {
                    b.HasOne("DatabaseMiddlware.Models.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId");

                    b.HasOne("DatabaseMiddlware.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.User", b =>
                {
                    b.HasOne("DatabaseMiddlware.Models.Cooperator", "Cooperator")
                        .WithMany()
                        .HasForeignKey("CooperatorId");
                });

            modelBuilder.Entity("DatabaseMiddlware.Models.WorkBook", b =>
                {
                    b.HasOne("DatabaseMiddlware.Models.Cooperator", "Cooperator")
                        .WithMany()
                        .HasForeignKey("CooperatorId");

                    b.HasOne("DatabaseMiddlware.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");
                });
#pragma warning restore 612, 618
        }
    }
}
